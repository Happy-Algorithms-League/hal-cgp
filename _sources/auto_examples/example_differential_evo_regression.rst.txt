.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_example_differential_evo_regression.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_example_differential_evo_regression.py:


Example for differential evolutionary regression
================================================

Example demonstrating the use of Cartesian genetic programming for
a regression task that involves numeric constants. Local
gradient-based search is used to determine numeric leaf values of the
graph.

References:

- Topchy, A., & Punch, W. F. (2001). Faster genetic programming based
  on local gradient search of numeric leaf values. In Proceedings of
  the genetic and evolutionary computation conference (GECCO-2001)
  (Vol. 155162). Morgan Kaufmann San Francisco, CA, USA.

- Izzo, D., Biscani, F., & Mereta, A. (2017). Differentiable genetic
  programming. In European Conference on Genetic Programming
  (pp. 35-51). Springer, Cham.


.. code-block:: default


    # The docopt str is added explicitly to ensure compatibility with
    # sphinx-gallery.
    docopt_str = """
      Usage:
        example_differential_evo_regression.py [--max-generations=<N>]

      Options:
        -h --help
        --max-generations=<N>  Maximum number of generations [default: 2000]

    """

    import functools

    import matplotlib.pyplot as plt
    import numpy as np
    import scipy.constants
    import torch
    from docopt import docopt

    import cgp

    args = docopt(docopt_str)








We first define the target function. Note that this function contains
numeric values which are initially not available as constants to the search.


.. code-block:: default



    def f_target(x):
        return x[:, 0] ** 2 + 1.0 + np.pi









Then we define the differentiable(!) objective function for the evolution.  It
consists of an inner objective which accepts a torch tensor as input
variable and uses mean-squared error between the expression
represented by a given individual and the target function evaluated
on a set of random points. This inner objective is then used by
actual objective function to update the fitness of the individual.


.. code-block:: default



    def inner_objective(f, seed):
        """Return a differentiable loss of the differentiable graph f. Used
        for calculating the fitness of each individual and for the local
        search of numeric leaf values.

        """

        torch.manual_seed(seed)
        batch_size = 500
        x = torch.DoubleTensor(batch_size, 1).uniform_(-5, 5)
        y = f(x)
        return torch.nn.MSELoss()(f_target(x), y[:, 0])


    def objective(individual, seed):
        """Objective function of the regression task."""

        if individual.fitness is not None:
            return individual

        f = individual.to_torch()
        loss = inner_objective(f, seed)
        individual.fitness = -loss.item()

        return individual









Next, we define the parameters for the population, the genome of
individuals, the evolutionary algorithm, and the local search.


.. code-block:: default



    population_params = {"n_parents": 1, "mutation_rate": 0.05, "seed": 818821}

    genome_params = {
        "n_inputs": 1,
        "n_outputs": 1,
        "n_columns": 20,
        "n_rows": 1,
        "levels_back": None,
        "primitives": (cgp.Add, cgp.Sub, cgp.Mul, cgp.Parameter),
    }

    ea_params = {"n_offsprings": 4, "tournament_size": 1, "n_processes": 1, "k_local_search": 2}

    evolve_params = {"max_generations": int(args["--max-generations"]), "min_fitness": 0.0}

    # use an uneven number of gradient steps so they can not easily
    # average out for clipped values
    local_search_params = {"lr": 1e-3, "gradient_steps": 9}








We then create a Population instance and instantiate the local search
and evolutionary algorithm.


.. code-block:: default


    pop = cgp.Population(**population_params, genome_params=genome_params)

    # define the function for local search; parameters such as the
    # learning rate and number of gradient steps are fixed via the use
    # of `partial`; the `local_search` function should only receive a
    # population of individuals as input
    local_search = functools.partial(
        cgp.local_search.gradient_based,
        objective=functools.partial(inner_objective, seed=population_params["seed"]),
        **local_search_params,
    )

    ea = cgp.ea.MuPlusLambda(**ea_params, local_search=local_search)








We define a recording callback closure for bookkeeping of the progression of the evolution.


.. code-block:: default



    history = {}
    history["champion"] = []
    history["fitness_parents"] = []


    def recording_callback(pop):
        history["champion"].append(pop.champion)
        history["fitness_parents"].append(pop.fitness_parents())


    obj = functools.partial(objective, seed=population_params["seed"])








Finally, we call the `evolve` method to perform the evolutionary search.


.. code-block:: default


    cgp.evolve(pop, obj, ea, **evolve_params, print_progress=True, callback=recording_callback)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [2/2000] max fitness: -171.47786981872468[K    [3/2000] max fitness: -167.26491103858154[K    [4/2000] max fitness: -163.2010677408287[K    [5/2000] max fitness: -159.2810620606094[K    [6/2000] max fitness: -155.49980294034543[K    [7/2000] max fitness: -151.85237951779072[K    [8/2000] max fitness: -148.33405474811138[K    [9/2000] max fitness: -100.81326218785846[K    [10/2000] max fitness: -94.30280108884027[K    [11/2000] max fitness: -88.66873616760508[K    [12/2000] max fitness: -83.79309263730596[K    [13/2000] max fitness: -79.57377671409922[K    [14/2000] max fitness: -75.92243781920395[K    [15/2000] max fitness: -72.76261855749713[K    [16/2000] max fitness: -70.02815373402858[K    [17/2000] max fitness: -67.6617848845812[K    [18/2000] max fitness: -52.479091199098995[K    [19/2000] max fitness: -52.47074731440681[K    [20/2000] max fitness: -52.46473038281477[K    [21/2000] max fitness: -52.460391460703725[K    [22/2000] max fitness: -52.45726258267045[K    [23/2000] max fitness: -52.455006290094474[K    [24/2000] max fitness: -52.45337923524147[K    [25/2000] max fitness: -52.45220593550063[K    [26/2000] max fitness: -52.45135984707325[K    [27/2000] max fitness: -52.45074971685496[K    [28/2000] max fitness: -52.450309740522506[K    [29/2000] max fitness: -52.44999246534523[K    [30/2000] max fitness: -52.4497636722701[K    [31/2000] max fitness: -43.97969325975194[K    [32/2000] max fitness: -42.34382519791927[K    [33/2000] max fitness: -1.6945892457041014[K    [34/2000] max fitness: -1.5766399889918228[K    [35/2000] max fitness: -1.466900407393588[K    [36/2000] max fitness: -1.3647990792035125[K    [37/2000] max fitness: -1.2698043556374683[K    [38/2000] max fitness: -1.1814215925005425[K    [39/2000] max fitness: -1.0991905745399781[K    [40/2000] max fitness: -1.0226831190720527[K    [41/2000] max fitness: -0.9515008464047797[K    [42/2000] max fitness: -0.8852731054468744[K    [43/2000] max fitness: -0.8236550437015104[K    [44/2000] max fitness: -0.7663258115951534[K    [45/2000] max fitness: -0.7129868917913014[K    [46/2000] max fitness: -0.6633605447897681[K    [47/2000] max fitness: -0.6171883627175898[K    [48/2000] max fitness: -0.0044074907345378325[K    [49/2000] max fitness: -0.004251489894911988[K    [50/2000] max fitness: -0.00410101062377719[K    [51/2000] max fitness: -0.003955857488091476[K    [52/2000] max fitness: -0.00381584197206412[K    [53/2000] max fitness: -0.0036807822323223173[K    [54/2000] max fitness: -0.0035505028617448266[K    [55/2000] max fitness: -0.0034248346616540743[K    [56/2000] max fitness: -0.003303614422071895[K    [57/2000] max fitness: -0.003186684709751792[K    [58/2000] max fitness: -0.003073893663715416[K    [59/2000] max fitness: -0.00296509479802461[K    [60/2000] max fitness: -0.0028601468115347518[K    [61/2000] max fitness: -0.002758913404381729[K    [62/2000] max fitness: -0.002661263100964073[K    [63/2000] max fitness: -0.0025670690791906705[K    [64/2000] max fitness: -0.002476209005772322[K    [65/2000] max fitness: -0.0023885648773429103[K    [66/2000] max fitness: -0.0023040228672040635[K    [67/2000] max fitness: -0.0022224731774942255[K    [68/2000] max fitness: -0.0021438098965896914[K    [69/2000] max fitness: -0.0020679308615539475[K    [70/2000] max fitness: -0.0019947375254538297[K    [71/2000] max fitness: -0.0019241348293743115[K    [72/2000] max fitness: -0.0018560310789605707[K    [73/2000] max fitness: -0.0017903378253320357[K    [74/2000] max fitness: -0.0017269697502099038[K    [75/2000] max fitness: -0.0016658445551119543[K    [76/2000] max fitness: -0.0016068828544674144[K    [77/2000] max fitness: -0.0015500080725165128[K    [78/2000] max fitness: -0.0014951463438588556[K    [79/2000] max fitness: -0.0014422264175212244[K    [80/2000] max fitness: -0.0013911795644216203[K    [81/2000] max fitness: -0.0013419394881080523[K    [82/2000] max fitness: -0.0012944422386569898[K    [83/2000] max fitness: -0.0012486261296188838[K    [84/2000] max fitness: -0.0012044316579044275[K    [85/2000] max fitness: -0.0011618014265048302[K    [86/2000] max fitness: -0.0011206800699485604[K    [87/2000] max fitness: -0.0010810141823962055[K    [88/2000] max fitness: -0.0010427522482802684[K    [89/2000] max fitness: -0.001005844575400015[K    [90/2000] max fitness: -0.0009702432303839517[K    [91/2000] max fitness: -0.0009359019764375898[K    [92/2000] max fitness: -0.0009027762132935137[K    [93/2000] max fitness: -0.0008708229192878325[K    [94/2000] max fitness: -0.0008400005954858004[K    [95/2000] max fitness: -0.0008102692117860012[K    [96/2000] max fitness: -0.0007815901549314825[K    [97/2000] max fitness: -0.0007539261783615094[K    [98/2000] max fitness: -0.0007272413538379993[K    [99/2000] max fitness: -0.0007015010247840883[K    [100/2000] max fitness: -0.0006766717612742488[K    [101/2000] max fitness: -0.0006527213166182617[K    [102/2000] max fitness: -0.0006296185854801173[K    [103/2000] max fitness: -0.0006073335634812071[K    [104/2000] max fitness: -0.0005858373082324481[K    [105/2000] max fitness: -0.0005651019017454806[K    [106/2000] max fitness: -0.0005451004141743991[K    [107/2000] max fitness: -0.0005258068688414415[K    [108/2000] max fitness: -0.0005071962084995705[K    [109/2000] max fitness: -0.000489244262790172[K    [110/2000] max fitness: -0.0004719277168518964[K    [111/2000] max fitness: -0.000455224081040556[K    [112/2000] max fitness: -0.00043911166172141145[K    [113/2000] max fitness: -0.0004235695330945358[K    [114/2000] max fitness: -0.00040857751001782287[K    [115/2000] max fitness: -0.00039411612179172473[K    [116/2000] max fitness: -0.0003801665868720182[K    [117/2000] max fitness: -0.00036671078847748195[K    [118/2000] max fitness: -0.0003537312510608356[K    [119/2000] max fitness: -0.00034121111761279885[K    [120/2000] max fitness: -0.0003291341277690685[K    [121/2000] max fitness: -0.00031748459669253163[K    [122/2000] max fitness: -0.0003062473947027537[K    [123/2000] max fitness: -0.0002954079276262724[K    [124/2000] max fitness: -0.0002849521178429621[K    [125/2000] max fitness: -0.00027486638600276856[K    [126/2000] max fitness: -0.0002651376333895683[K    [127/2000] max fitness: -0.0002557532249094495[K    [128/2000] max fitness: -0.000246700972681148[K    [129/2000] max fitness: -0.0002379691202070591[K    [130/2000] max fitness: -0.00022954632710474448[K    [131/2000] max fitness: -0.00022142165437870624[K    [132/2000] max fitness: -0.00021358455021334668[K    [133/2000] max fitness: -0.00020602483626918275[K    [134/2000] max fitness: -0.00019873269446387323[K    [135/2000] max fitness: -0.0001916986542208697[K    [136/2000] max fitness: -0.00018491358016970065[K    [137/2000] max fitness: -0.00017836866028170823[K    [138/2000] max fitness: -0.0001720553944253103[K    [139/2000] max fitness: -0.00016596558332664706[K    [140/2000] max fitness: -0.00016009131792093048[K    [141/2000] max fitness: -0.00015442496908058223[K    [142/2000] max fitness: -0.0001489591777070152[K    [143/2000] max fitness: -0.0001436868451731719[K    [144/2000] max fitness: -0.00013860112410414352[K    [145/2000] max fitness: -0.0001336954094842604[K    [146/2000] max fitness: -0.0001289633300790108[K    [147/2000] max fitness: -0.00012439874016038772[K    [148/2000] max fitness: -0.00011999571152522122[K    [149/2000] max fitness: -0.0001157485257960073[K    [150/2000] max fitness: -0.00011165166699420546[K    [151/2000] max fitness: -0.0001076998143765427[K    [152/2000] max fitness: -0.00010388783552458623[K    [153/2000] max fitness: -0.00010021077967923942[K    [154/2000] max fitness: -9.666387131095686e-05[K    [155/2000] max fitness: -9.324250391750824e-05[K    [156/2000] max fitness: -8.994223404151546e-05[K    [157/2000] max fitness: -8.675877549940173e-05[K    [158/2000] max fitness: -8.368799381475065e-05[K    [159/2000] max fitness: -8.072590084893348e-05[K    [160/2000] max fitness: -7.78686496213376e-05[K    [161/2000] max fitness: -7.511252931316888e-05[K    [162/2000] max fitness: -7.245396044821348e-05[K    [163/2000] max fitness: -6.988949024399114e-05[K    [164/2000] max fitness: -6.741578812736107e-05[K    [165/2000] max fitness: -6.502964140912483e-05[K    [166/2000] max fitness: -6.272795111153977e-05[K    [167/2000] max fitness: -6.050772794358825e-05[K    [168/2000] max fitness: -5.836608841861961e-05[K    [169/2000] max fitness: -5.630025110950117e-05[K    [170/2000] max fitness: -5.4307533036291044e-05[K    [171/2000] max fitness: -5.238534618170205e-05[K    [172/2000] max fitness: -5.053119412996946e-05[K    [173/2000] max fitness: -4.8742668824674905e-05[K    [174/2000] max fitness: -4.7017447441296546e-05[K    [175/2000] max fitness: -4.535328937048877e-05[K    [176/2000] max fitness: -4.374803330810897e-05[K    [177/2000] max fitness: -4.219959444819059e-05[K    [178/2000] max fitness: -4.070596177547299e-05[K    [179/2000] max fitness: -3.9265195453488976e-05[K    [180/2000] max fitness: -3.787542430528739e-05[K    [181/2000] max fitness: -3.653484338323382e-05[K    [182/2000] max fitness: -3.5241711624895794e-05[K    [183/2000] max fitness: -3.3994349591844995e-05[K    [184/2000] max fitness: -3.2791137288466834e-05[K    [185/2000] max fitness: -3.16305120580581e-05[K    [186/2000] max fitness: -3.051096655335317e-05[K    [187/2000] max fitness: -2.9431046778859086e-05[K    [188/2000] max fitness: -2.8389350202474457e-05[K    [189/2000] max fitness: -2.7384523934045824e-05[K    [190/2000] max fitness: -2.6415262968167007e-05[K    [191/2000] max fitness: -2.5480308489497646e-05[K    [192/2000] max fitness: -2.457844623777724e-05[K    [193/2000] max fitness: -2.3708504930873735e-05[K    [194/2000] max fitness: -2.2869354743545314e-05[K    [195/2000] max fitness: -2.2059905840168662e-05[K    [196/2000] max fitness: -2.1279106959264007e-05[K    [197/2000] max fitness: -2.0525944048201067e-05[K    [198/2000] max fitness: -1.9799438946207708e-05[K    [199/2000] max fitness: -1.90986481140154e-05[K    [200/2000] max fitness: -1.8422661408431612e-05[K    [201/2000] max fitness: -1.7770600900322872e-05[K    [202/2000] max fitness: -1.714161973438214e-05[K    [203/2000] max fitness: -1.6534901029317158e-05[K    [204/2000] max fitness: -1.5949656816894407e-05[K    [205/2000] max fitness: -1.5385127018641667e-05[K    [206/2000] max fitness: -1.4840578458662996e-05[K    [207/2000] max fitness: -1.4315303911416352e-05[K    [208/2000] max fitness: -1.3808621183258584e-05[K    [209/2000] max fitness: -1.3319872226450057e-05[K    [210/2000] max fitness: -1.2848422284486582e-05[K    [211/2000] max fitness: -1.2393659067730234e-05[K    [212/2000] max fitness: -1.195499195824013e-05[K    [213/2000] max fitness: -1.15318512426874e-05[K    [214/2000] max fitness: -1.1123687372440872e-05[K    [215/2000] max fitness: -1.072997024985652e-05[K    [216/2000] max fitness: -1.0350188539812629e-05[K    [217/2000] max fitness: -9.983849005659054e-06[K    [218/2000] max fitness: -9.63047586856904e-06[K    [219/2000] max fitness: -9.289610189666946e-06[K    [220/2000] max fitness: -8.960809273972843e-06[K    [221/2000] max fitness: -8.643646095502621e-06[K    [222/2000] max fitness: -8.33770874258489e-06[K    [223/2000] max fitness: -8.0425998829672e-06[K    [224/2000] max fitness: -7.757936247785078e-06[K    [225/2000] max fitness: -7.483348133753249e-06[K    [226/2000] max fitness: -7.218478923040567e-06[K    [227/2000] max fitness: -6.962984620127221e-06[K    [228/2000] max fitness: -6.716533405034193e-06[K    [229/2000] max fitness: -6.4788052023767685e-06[K    [230/2000] max fitness: -6.249491265664885e-06[K    [231/2000] max fitness: -6.028293776342745e-06[K    [232/2000] max fitness: -5.814925456987636e-06[K    [233/2000] max fitness: -5.609109198186654e-06[K    [234/2000] max fitness: -5.410577698711631e-06[K    [235/2000] max fitness: -5.219073118285661e-06[K    [236/2000] max fitness: -5.0343467427580095e-06[K    [237/2000] max fitness: -4.856158661112954e-06[K    [238/2000] max fitness: -4.6842774538454656e-06[K    [239/2000] max fitness: -4.5184798924075765e-06[K    [240/2000] max fitness: -4.358550649321811e-06[K    [241/2000] max fitness: -4.204282018526142e-06[K    [242/2000] max fitness: -4.055473645599688e-06[K    [243/2000] max fitness: -3.911932267542971e-06[K    [244/2000] max fitness: -3.7734714618221773e-06[K    [245/2000] max fitness: -3.6399114042341436e-06[K    [246/2000] max fitness: -3.511078635332248e-06[K    [247/2000] max fitness: -3.3868058352063127e-06[K    [248/2000] max fitness: -3.2669316061324506e-06[K    [249/2000] max fitness: -3.151300262983619e-06[K    [250/2000] max fitness: -3.039761631017949e-06[K    [251/2000] max fitness: -2.932170850853546e-06[K    [252/2000] max fitness: -2.828388190332224e-06[K    [253/2000] max fitness: -2.7282788630389024e-06[K    [254/2000] max fitness: -2.631712853257048e-06[K    [255/2000] max fitness: -2.538564747113976e-06[K    [256/2000] max fitness: -2.448713569687122e-06[K    [257/2000] max fitness: -2.362042627902047e-06[K    [258/2000] max fitness: -2.278439358969847e-06[K    [259/2000] max fitness: -2.1977951842111707e-06[K    [260/2000] max fitness: -2.1200053680266502e-06[K    [261/2000] max fitness: -2.044968881889211e-06[K    [262/2000] max fitness: -1.9725882731025127e-06[K    [263/2000] max fitness: -1.9027695382788158e-06[K    [264/2000] max fitness: -1.8354220012155787e-06[K    [265/2000] max fitness: -1.7704581951655042e-06[K    [266/2000] max fitness: -1.7077937492037767e-06[K    [267/2000] max fitness: -1.6473472786765609e-06[K    [268/2000] max fitness: -1.5890402794956215e-06[K    [269/2000] max fitness: -1.5327970261952635e-06[K    [270/2000] max fitness: -1.478544473557647e-06[K    [271/2000] max fitness: -1.4262121617722177e-06[K    [272/2000] max fitness: -1.3757321249191958e-06[K    [273/2000] max fitness: -1.3270388026813504e-06[K    [274/2000] max fitness: -1.2800689552310394e-06[K    [275/2000] max fitness: -1.2347615810755779e-06[K    [276/2000] max fitness: -1.191057837838716e-06[K    [277/2000] max fitness: -1.1489009658364399e-06[K    [278/2000] max fitness: -1.1082362143686246e-06[K    [279/2000] max fitness: -1.0690107706057994e-06[K    [280/2000] max fitness: -1.031173691001136e-06[K    [281/2000] max fitness: -9.946758351258694e-07[K    [282/2000] max fitness: -9.594698018562787e-07[K    [283/2000] max fitness: -9.25509867801454e-07[K    [284/2000] max fitness: -8.927519279315567e-07[K    [285/2000] max fitness: -8.611534382871476e-07[K    [286/2000] max fitness: -8.306733607296162e-07[K    [287/2000] max fitness: -8.012721096481824e-07[K    [288/2000] max fitness: -7.72911500540179e-07[K    [289/2000] max fitness: -7.455547004212404e-07[K    [290/2000] max fitness: -7.191661800012643e-07[K    [291/2000] max fitness: -6.937116675200297e-07[K    [292/2000] max fitness: -6.691581042553279e-07[K    [293/2000] max fitness: -6.45473601576692e-07[K    [294/2000] max fitness: -6.226273995365602e-07[K    [295/2000] max fitness: -6.005898269260926e-07[K    [296/2000] max fitness: -5.793322627208394e-07[K    [297/2000] max fitness: -5.588270989330532e-07[K    [298/2000] max fitness: -5.390477047406136e-07[K    [299/2000] max fitness: -5.199683919062825e-07[K    [300/2000] max fitness: -5.015643814149625e-07[K    [301/2000] max fitness: -4.838117712925954e-07[K    [302/2000] max fitness: -4.6668750556238303e-07[K    [303/2000] max fitness: -4.5016934430265124e-07[K    [304/2000] max fitness: -4.342358347581552e-07[K    [305/2000] max fitness: -4.188662834888211e-07[K    [306/2000] max fitness: -4.040407294816282e-07[K    [307/2000] max fitness: -3.8973991824187816e-07[K    [308/2000] max fitness: -3.7594527676688673e-07[K    [309/2000] max fitness: -3.6263888944559313e-07[K    [310/2000] max fitness: -3.498034747755452e-07[K    [311/2000] max fitness: -3.3742236292315755e-07[K    [312/2000] max fitness: -3.2547947407822844e-07[K    [313/2000] max fitness: -3.139592975641878e-07[K    [314/2000] max fitness: -3.0284687170222914e-07[K    [315/2000] max fitness: -2.92127764366001e-07[K    [316/2000] max fitness: -2.8178805425322915e-07[K    [317/2000] max fitness: -2.7181431279592125e-07[K    [318/2000] max fitness: -2.6219358672600055e-07[K    [319/2000] max fitness: -2.529133812443132e-07[K    [320/2000] max fitness: -2.4396164380365e-07[K    [321/2000] max fitness: -2.35326748448513e-07[K    [322/2000] max fitness: -2.26997480720008e-07[K    [323/2000] max fitness: -2.1896302308431152e-07[K    [324/2000] max fitness: -2.1121294089376325e-07[K    [325/2000] max fitness: -2.0373716882522507e-07[K    [326/2000] max fitness: -1.965259978177547e-07[K    [327/2000] max fitness: -1.8957006245294474e-07[K    [328/2000] max fitness: -1.8286032879963543e-07[K    [329/2000] max fitness: -1.7638808267525137e-07[K    [330/2000] max fitness: -1.7014491833199339e-07[K    [331/2000] max fitness: -1.6412272754003706e-07[K    [332/2000] max fitness: -1.5831368905566765e-07[K    [333/2000] max fitness: -1.5271025846333947e-07[K    [334/2000] max fitness: -1.473051583788038e-07[K    [335/2000] max fitness: -1.420913689983436e-07[K    [336/2000] max fitness: -1.370621189776944e-07[K    [337/2000] max fitness: -1.3221087664240087e-07[K    [338/2000] max fitness: -1.2753134150452421e-07[K    [339/2000] max fitness: -1.2301743607606487e-07[K    [340/2000] max fitness: -1.186632979787163e-07[K    [341/2000] max fitness: -1.1446327233373472e-07[K    [342/2000] max fitness: -1.1041190440963595e-07[K    [343/2000] max fitness: -1.0650393254405723e-07[K    [344/2000] max fitness: -1.0273428130642886e-07[K    [345/2000] max fitness: -9.909805491247213e-08[K    [346/2000] max fitness: -9.559053085824871e-08[K    [347/2000] max fitness: -9.220715379137703e-08[K    [348/2000] max fitness: -8.89435295944308e-08[K    [349/2000] max fitness: -8.579541967585278e-08[K    [350/2000] max fitness: -8.275873546956476e-08[K    [351/2000] max fitness: -7.982953311917296e-08[K    [352/2000] max fitness: -7.700400836150401e-08[K    [353/2000] max fitness: -7.427849158087947e-08[K    [354/2000] max fitness: -7.164944304788966e-08[K    [355/2000] max fitness: -6.911344831822495e-08[K    [356/2000] max fitness: -6.666721380181088e-08[K    [357/2000] max fitness: -6.430756248200645e-08[K    [358/2000] max fitness: -6.20314297921591e-08[K    [359/2000] max fitness: -5.983585963377841e-08[K    [360/2000] max fitness: -5.7718000537897236e-08[K    [361/2000] max fitness: -5.567510196176085e-08[K    [362/2000] max fitness: -5.370451071748896e-08[K    [363/2000] max fitness: -5.180366752387463e-08[K    [364/2000] max fitness: -4.997010368529521e-08[K    [365/2000] max fitness: -4.8201437884713605e-08[K    [366/2000] max fitness: -4.6495373088674334e-08[K    [367/2000] max fitness: -4.48496935675358e-08[K    [368/2000] max fitness: -4.3262262016229374e-08[K    [369/2000] max fitness: -4.1731016778293805e-08[K    [370/2000] max fitness: -4.0253969169037175e-08[K    [371/2000] max fitness: -3.8829200890151206e-08[K    [372/2000] max fitness: -3.7454861542842e-08[K    [373/2000] max fitness: -3.61291662206928e-08[K    [374/2000] max fitness: -3.48503931938503e-08[K    [375/2000] max fitness: -3.3616881673150405e-08[K    [376/2000] max fitness: -3.2427029649886666e-08[K    [377/2000] max fitness: -3.127929181919959e-08[K    [378/2000] max fitness: -3.0172177572590726e-08[K    [379/2000] max fitness: -2.9104249058009637e-08[K    [380/2000] max fitness: -2.8074119317315018e-08[K    [381/2000] max fitness: -2.7080450482161653e-08[K    [382/2000] max fitness: -2.6121952038192205e-08[K    [383/2000] max fitness: -2.5197379147756304e-08[K    [384/2000] max fitness: -2.4305531032808735e-08[K    [385/2000] max fitness: -2.3445249417603045e-08[K    [386/2000] max fitness: -2.2615417022305026e-08[K    [387/2000] max fitness: -2.1814956111930884e-08[K    [388/2000] max fitness: -2.104282709941481e-08[K    [389/2000] max fitness: -2.0298027191206848e-08[K    [390/2000] max fitness: -1.9579589087998884e-08[K    [391/2000] max fitness: -1.888657972713769e-08[K    [392/2000] max fitness: -1.8218099071867503e-08[K    [393/2000] max fitness: -1.757327894104702e-08[K    [394/2000] max fitness: -1.6951281883183993e-08[K    [395/2000] max fitness: -1.635130008732376e-08[K    [396/2000] max fitness: -1.577255433485069e-08[K    [397/2000] max fitness: -1.5214292986692044e-08[K    [398/2000] max fitness: -1.4675791008173884e-08[K    [399/2000] max fitness: -1.4156349026954746e-08[K    [400/2000] max fitness: -1.3655292424194367e-08[K    [401/2000] max fitness: -1.317197045917511e-08[K    [402/2000] max fitness: -1.2705755423022876e-08[K    [403/2000] max fitness: -1.225604182538767e-08[K    [404/2000] max fitness: -1.1822245606707633e-08[K    [405/2000] max fitness: -1.1403803379549664e-08[K    [406/2000] max fitness: -1.100017169661244e-08[K    [407/2000] max fitness: -1.0610826347156312e-08[K    [408/2000] max fitness: -1.0235261673691002e-08[K    [409/2000] max fitness: -9.872989916039572e-09[K    [410/2000] max fitness: -9.523540578748961e-09[K    [411/2000] max fitness: -9.186459818971638e-09[K    [412/2000] max fitness: -8.861309857107471e-09[K    [413/2000] max fitness: -8.547668408625108e-09[K    [414/2000] max fitness: -8.245128136241582e-09[K    [415/2000] max fitness: -7.953296118953054e-09[K    [416/2000] max fitness: -7.671793344046633e-09[K    [417/2000] max fitness: -7.400254213277385e-09[K    [418/2000] max fitness: -7.138326068436559e-09[K    [419/2000] max fitness: -6.885668733872834e-09[K    [420/2000] max fitness: -6.641954074424282e-09[K    [421/2000] max fitness: -6.406865568471785e-09[K    [422/2000] max fitness: -6.180097897764823e-09[K    [423/2000] max fitness: -5.961356550465362e-09[K    [424/2000] max fitness: -5.750357439318272e-09[K    [425/2000] max fitness: -5.5468265320167396e-09[K    [426/2000] max fitness: -5.350499495066298e-09[K    [427/2000] max fitness: -5.161121351569281e-09[K    [428/2000] max fitness: -4.978446148692801e-09[K    [429/2000] max fitness: -4.802236639453523e-09[K    [430/2000] max fitness: -4.632263974187658e-09[K    [431/2000] max fitness: -4.468307402746284e-09[K    [432/2000] max fitness: -4.31015398863391e-09[K    [433/2000] max fitness: -4.157598332390838e-09[K    [434/2000] max fitness: -4.010442304193027e-09[K    [435/2000] max fitness: -3.8684947870360326e-09[K    [436/2000] max fitness: -3.731571428319087e-09[K    [437/2000] max fitness: -3.5994944005963365e-09[K    [438/2000] max fitness: -3.4720921705219676e-09[K    [439/2000] max fitness: -3.349199276116311e-09[K    [440/2000] max fitness: -3.2306561116902546e-09[K    [441/2000] max fitness: -3.116308720894485e-09[K    [442/2000] max fitness: -3.006008596410464e-09[K    [443/2000] max fitness: -2.8996124873243724e-09[K    [444/2000] max fitness: -2.796982213010501e-09[K    [445/2000] max fitness: -2.6979844839032402e-09[K    [446/2000] max fitness: -2.6024907278399356e-09[K    [447/2000] max fitness: -2.5103769235362258e-09[K    [448/2000] max fitness: -2.4215234394777448e-09[K    [449/2000] max fitness: -2.335814878198089e-09[K    [450/2000] max fitness: -2.253139926760983e-09[K    [451/2000] max fitness: -2.1733912122661633e-09[K    [452/2000] max fitness: -2.096465162007269e-09[K    [453/2000] max fitness: -2.022261869188045e-09[K    [454/2000] max fitness: -1.9506849633640587e-09[K    [455/2000] max fitness: -1.8816414846987628e-09[K    [456/2000] max fitness: -1.8150417641246184e-09[K    [457/2000] max fitness: -1.7507993059584396e-09[K    [458/2000] max fitness: -1.6888306760955257e-09[K    [459/2000] max fitness: -1.6290553937139176e-09[K    [460/2000] max fitness: -1.5713958261976774e-09[K    [461/2000] max fitness: -1.5157770890927762e-09[K    [462/2000] max fitness: -1.4621269482842083e-09[K    [463/2000] max fitness: -1.4103757261773255e-09[K    [464/2000] max fitness: -1.3604562117408896e-09[K    [465/2000] max fitness: -1.3123035724460625e-09[K    [466/2000] max fitness: -1.2658552707869774e-09[K    [467/2000] max fitness: -1.221050982469274e-09[K    [468/2000] max fitness: -1.1778325187201979e-09[K    [469/2000] max fitness: -1.1361437501034089e-09[K    [470/2000] max fitness: -1.0959305336265669e-09[K    [471/2000] max fitness: -1.0571406430871132e-09[K    [472/2000] max fitness: -1.0197237004790402e-09[K    [473/2000] max fitness: -9.836311110909419e-10[K    [474/2000] max fitness: -9.488160000418866e-10[K    [475/2000] max fitness: -9.152331517162226e-10[K    [476/2000] max fitness: -8.82838950864632e-10[K    [477/2000] max fitness: -8.515913258881688e-10[K    [478/2000] max fitness: -8.21449694334211e-10[K    [479/2000] max fitness: -7.923749101632922e-10[K    [480/2000] max fitness: -7.643292128251776e-10[K    [481/2000] max fitness: -7.372761783444935e-10[K    [482/2000] max fitness: -7.111806719241092e-10[K    [483/2000] max fitness: -6.860088023802639e-10[K    [484/2000] max fitness: -6.617278780125743e-10[K    [485/2000] max fitness: -6.383063643361101e-10[K    [486/2000] max fitness: -6.157138429335479e-10[K    [487/2000] max fitness: -5.939209720767324e-10[K    [488/2000] max fitness: -5.728994484735253e-10[K    [489/2000] max fitness: -5.526219707793142e-10[K    [490/2000] max fitness: -5.330622039035345e-10[K    [491/2000] max fitness: -5.141947447462344e-10[K    [492/2000] max fitness: -4.959950895094706e-10[K    [493/2000] max fitness: -4.784396015517195e-10[K    [494/2000] max fitness: -4.615054809581701e-10[K    [495/2000] max fitness: -4.4517073476608076e-10[K    [496/2000] max fitness: -4.294141483978776e-10[K    [497/2000] max fitness: -4.14215258218699e-10[K    [498/2000] max fitness: -3.99554324866252e-10[K    [499/2000] max fitness: -3.85412307578861e-10[K    [500/2000] max fitness: -3.717708396493242e-10[K    [501/2000] max fitness: -3.5861220435093874e-10[K    [502/2000] max fitness: -3.4591931206400915e-10[K    [503/2000] max fitness: -3.3367567808642345e-10[K    [504/2000] max fitness: -3.2186540116247034e-10[K    [505/2000] max fitness: -3.1047314288238813e-10[K    [506/2000] max fitness: -2.9948410765305874e-10[K    [507/2000] max fitness: -2.888840236590905e-10[K    [508/2000] max fitness: -2.7865912410850447e-10[K    [509/2000] max fitness: -2.687961294992987e-10[K    [510/2000] max fitness: -2.592822304761831e-10[K    [511/2000] max fitness: -2.5010507093269297e-10[K    [512/2000] max fitness: -2.412527321818521e-10[K    [513/2000] max fitness: -2.3271371737564054e-10[K    [514/2000] max fitness: -2.2447693649851756e-10[K    [515/2000] max fitness: -2.1653169221074915e-10[K    [516/2000] max fitness: -2.088676657197975e-10[K    [517/2000] max fitness: -2.0147490346882865e-10[K    [518/2000] max fitness: -1.9434380419355672e-10[K    [519/2000] max fitness: -1.8746510644073724e-10[K    [520/2000] max fitness: -1.808298766106283e-10[K    [521/2000] max fitness: -1.7442949731197543e-10[K    [522/2000] max fitness: -1.6825565608632495e-10[K    [523/2000] max fitness: -1.6230033471415923e-10[K    [524/2000] max fitness: -1.5655579885843604e-10[K    [525/2000] max fitness: -1.5101458783765165e-10[K    [526/2000] max fitness: -1.4566950514421756e-10[K    [527/2000] max fitness: -1.405136088311485e-10[K    [528/2000] max fitness: -1.3554020278823408e-10[K    [529/2000] max fitness: -1.3074282787719207e-10[K    [530/2000] max fitness: -1.2611525357674824e-10[K    [531/2000] max fitness: -1.2165146984055437e-10[K    [532/2000] max fitness: -1.1734567940983843e-10[K    [533/2000] max fitness: -1.1319229019101252e-10[K    [534/2000] max fitness: -1.0918590799852518e-10[K    [535/2000] max fitness: -1.0532132966891278e-10[K    [536/2000] max fitness: -1.0159353607771255e-10[K    [537/2000] max fitness: -9.799768575763817e-11[K




After finishing the evolution, we plot the result and log the final
evolved expression.


.. code-block:: default


    width = 9.0
    fig = plt.figure(figsize=(width, width / scipy.constants.golden))

    ax_fitness = fig.add_subplot(121)
    ax_fitness.set_xlabel("Generation")
    ax_fitness.set_ylabel("Fitness")
    ax_fitness.set_yscale("symlog")

    ax_function = fig.add_subplot(122)
    ax_function.set_ylabel(r"$f(x)$")
    ax_function.set_xlabel(r"$x$")


    print(f"Final expression {pop.champion.to_sympy()[0]} with fitness {pop.champion.fitness}")

    history_fitness = np.array(history["fitness_parents"])
    ax_fitness.plot(np.max(history_fitness, axis=1), label="Champion")
    ax_fitness.plot(np.mean(history_fitness, axis=1), label="Population mean")

    x = np.linspace(-5.0, 5, 100).reshape(-1, 1)
    f = pop.champion.to_func()
    y = [f(xi) for xi in x]
    ax_function.plot(x, f_target(x), lw=2, label="Target")
    ax_function.plot(x, y, lw=1, label="Target", marker="x")

    plt.savefig("example_differential_evo_regression.pdf", dpi=300)



.. image:: /auto_examples/images/sphx_glr_example_differential_evo_regression_001.png
    :alt: example differential evo regression
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Final expression x_0**2 + 4.141582754211744 with fitness -9.799768575763817e-11





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.614 seconds)


.. _sphx_glr_download_auto_examples_example_differential_evo_regression.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_differential_evo_regression.py <example_differential_evo_regression.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_differential_evo_regression.ipynb <example_differential_evo_regression.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
